def search(word,root):=>Boolean
    if not root:
        return False
    if root.val == word[0] and len(word) == 1:
        if pointer == 0:
            return False
        else:
            return True
    elif root.val == word[0]:
        return search(root.middle,word[1:])
    if root.val < word[0]:
        return search(word,root.right)
    else:
        return search(word,root.left)
    
def build(word,root):
    if not root:
        root = Node(word[0])
        cur = root
        pointer = 1
        while pointer < len(word):
            cur.middle = Node(word[pointer])
            pointer += 1
            cur = cur.middle
        return
    if root.val == word[0]:
        build(word[1:],root.middle)
    if root.val < word[0]:
        build(word,root.right)
    if root.val > word[0]:
        build(word,root.left)

    
    